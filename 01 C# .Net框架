# C--Unity
C# for Unity

主要编译工具：Visual Studio
.NET 兼容的编译器（C#， VB, .NET, F#……）
编译工具（IDE）
    ↓ produce
编译代码 使用→  基类库（BCL）
    ↓    执行     ↓
    公共语言运行库（CLR）

BCL：Basic Class Library
通用基础类   → 文件操作，字符串操作
集合类       → 列表，字典
线程和同步类 → 多线程程序
XML类        → 创建，读取以及操作XML文档

编译过程
                                编译过程解析
.NET 兼容语言的源代码文库        .NET 源文件：C#， VB等
      ↓                          编译器产生程序集（ddl文件 或者exe）
.NET 兼容编译器                   程序集中包括CIL（公共中间语言）
      ↓
    程序集
  公共中间语言
   类型信息
   安全信息
   
程序集：类型信息；CIL
   ↓
JIT编译器 公共语言运行库        我们自己写的代码不能被识别，需要编译器翻译成系统可以直接识别运行的代码
   ↓
本机代码
   ↓
操作系统服务

编译和运行过程：
C#源文件
   ↓
C#编译器
   ↓
程序集：CIL；类型信息
   ↓
 JIT编译器
   ↓
 本机代码
   ↓
操作系统服务

CLR概览
托管代码是.Net框架编写的代码，需要在CLR的环境下运行；非托管代码不在CLR控制之下，比如Win32C/C++ DLL成为非托管代码

非托管代码               托管代码                  
非NET程序        程序集   程序集   程序集
    ↓                       ↓
                 CLR：内存管理；异常处理；垃圾收集；反射服务；JIT编译器；类加载器；安全服务
              ↓
           操作系统
           
※假设我们写的代码和别的程序有交互，别的程序会直接和操作系统交互，而我们写的代码是通过CLR和操作系统进行交互

C#的演化
1.0  C#
2.0  泛型
3.0  UNQ
4.0  命名参数和可选参数
5.0  异步
